# Guido van Rossum <guido@python.org>
import random as rn
import time


def check_weather():
    seasons = ['‚òÄ', '‚õà', '‚ùÑ']
    weather = rn.choice(seasons)
    return weather


class Duck:
    name = '–ì–æ–≤–æ—Ä—è—â–∞—è —É—Ç–∫–∞'
    profession = '–ú–∞–ª—è—Ä'
    bag = 'üç∫'
    photo = 'ü¶Ü'
    anger = 1
    health = 50

    def look(self):
        return self.photo + self.bag

    def kick(self):
        return round((1 + self.anger) * rn.random(), 2)


class Criminal:
    name = '–í–∞—Å—ë–∫'
    bag = 'üç∫'
    photo = 'üëø'
    anger = 10
    health = 10

    def look(self):
        return self.photo + self.bag

    def kick(self):
        return round(5 * rn.random(), 2)


def you_loose(duck):
    print(f'{duck.name} —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –∫–∞–∫-—Ç–æ –Ω–µ—Ö–æ—Ä–æ—à–æ.')
    time.sleep(1.6)
    print('#############################################\n'
          '############ G A M E  O V E R ###############\n'
          '#############################################')


def you_win(duck):
    print(f'{duck.name} —Å—á–∞—Å—Ç–ª–∏–≤, –∫–∞–∫ –Ω–∏–∫–æ–≥–¥–∞ —Ä–∞–Ω–µ–µ.')
    time.sleep(1.6)
    print('#############################################\n'
          '############## Y O U  W I N   ###############\n'
          '#############################################')


def stats(person):
    return f'‚ô•:{person.health} üò†:{person.anger} - {person.look()} - {person.name}'


def drink_beer(duck):
    duck.health = round(duck.health * 0.7, 2)
    duck.bag = ''
    print(f'{stats(duck)} –∑–∞–ª–ø–æ–º –≤—ã–ø–∏–≤–∞–µ—Ç üç∫. –û–Ω–æ —Ç–∞–∫ —Å–µ–±–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ')
    time.sleep(1.6)
    return


def step1(duck):
    print(
        '–£—Ç–∫–∞–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –ø–æ–≥—É–ª—è—Ç—å. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )

    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()

    if options[option]:
        duck.bag = '‚òÇ'
    return step2(duck)


def step2(duck):
    while duck.health > 0:
        weather = check_weather()
        print(f'{weather} - {stats(duck)} –≥—É–ª—è–µ—Ç')
        time.sleep(1.6)
        if weather == '‚òÄ':
            print(f'{weather} - {stats(duck)} –≥–æ–≤–æ—Ä–∏—Ç: "–í —Ç–∞–∫—É—é —á—É–¥–µ—Å–Ω—É—é –ø–æ–≥–æ–¥—É –±–∞—Ö–Ω—É—Ç—å –±—ã üç∫!"')
            time.sleep(1.6)
            return step3_beer(duck)
        if weather == '‚õà':
            print(f'{weather} - {stats(duck)} –≥–æ–≤–æ—Ä–∏—Ç: "–î–æ–∂–¥—å –∫–∞–∫ –∏–∑ –≤–µ–¥—Ä–∞, —Å–ø–∞—Å–∞—Ü—Ü–∞!!11" \n')
            time.sleep(1.6)
            duck.anger += 1
            if duck.bag != '‚òÇ':
                print(f'{duck.name} —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ –∑–æ–Ω—Ç–∞. –î–æ–∂–¥—å –±–æ–ª—å–Ω–æ –±—å–µ—Ç –ø–æ –ø–µ—Ä—å—è–º —É—Ç–∫–∏, –Ω–∞–Ω–æ—Å—è —É—Ä–æ–Ω -1.')
                time.sleep(1.6)
                duck.health -= 1
            else:
                print(f'–ú–æ–ª–Ω–∏—è –ø–æ–ø–∞–¥–∞–µ—Ç –ø—Ä—è–º–æ –≤ –∑–æ–Ω—Ç–∏–∫! \n {stats(duck)} –Ω–µ–≤—Ä–µ–¥–∏–º–∞, –Ω–æ –ø—Ä–æ—Å—Ç–æ –≤ —è—Ä–æ—Å—Ç–∏!')
                duck.anger += 5
            print(f'–°–ø–∞—Å–∞—è—Å—å –æ—Ç –Ω–µ–ø–æ–≥–æ–¥—ã, {duck.name} –∑–∞–±–µ–≥–∞–µ—Ç –≤ —Ü–∏—Ä–∫.')
            time.sleep(1.6)
            return step5_circus(duck)
        else:
            print(f'{weather} - {stats(duck)} –º–æ–ª—á–∞ –≥—É–ª—è–µ—Ç')
            time.sleep(1.6)
            gopnik = Criminal()
            return step4_gopnik(duck, gopnik)
    you_loose(duck)


def step3_beer(duck):
    items = list(duck.bag)
    try:
        items.remove('üç∫')
        drink_beer(duck)
        return step2(duck)
    except ValueError:
        duck.anger = round(duck.anger * 1.7, 2)
        duck.health = round(duck.health * 0.9, 2)
        print(f'{stats(duck)} –≥—Ä—É—Å—Ç–∏—Ç: –≤ —Å—É–º–∫–µ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ. –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–æ–±—ã—Ç—å –ø–∏–≤–∫–∞')
        time.sleep(1.6)
        return step2(duck)


def step4_gopnik(duck, gopnik):
    print(f'{stats(duck)} –Ω–µ—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≥—É–ª–∏–≤–∞–ª—Å—è –ø–æ –ø–∞—Ä–∫—É, –∫–æ–≥–¥–∞ –Ω–∞ –Ω–µ–≥–æ –≤–Ω–µ–∑–∞–ø–Ω–æ –Ω–∞–ø–∞–ª–∏')
    time.sleep(1.6)

    while duck.health > -1 and gopnik.health > 0:
        enemies = {gopnik, duck}
        for enemy in enemies:
            damage = round(enemy.kick(), 2)
            other_enemy = list(enemies.difference({enemy, }))[0]
            print(f'{stats(enemy)} –Ω–∞–Ω–æ—Å–∏—Ç —É–¥–∞—Ä. –£—Ä–æ–Ω -{damage}')
            time.sleep(1.6)
            other_enemy.health -= damage

    if duck.health < 0:
        return you_loose(duck)
    else:
        print(f'{gopnik.name} –ø–æ–≤–µ—Ä–∂–µ–Ω. –ò–∑ –Ω–µ–≥–æ –¥—Ä–æ–ø–∞–µ—Ç—Å—è {gopnik.bag}.')
        time.sleep(1.6)
        duck.bag = gopnik.bag
        return step2(duck)


def step5_circus(duck):
    today_vacancy = rn.choice(['–ì–æ–≤–æ—Ä—è—â–∞—è —É—Ç–∫–∞', '–ú–∞–ª—è—Ä'])

    print('\n–¶–∏—Ä–∫–∞—á: –∫–∞–∫ –∑–¥–æ—Ä–æ–≤–æ, —á—Ç–æ –≤—ã –∑–∞—à–ª–∏. –£ –Ω–∞—Å –∫–∞–∫ —Ä–∞–∑ –æ—Ç–∫—Ä—ã—Ç–∞ –∫–æ–µ-–∫–∞–∫–∞—è –≤–∞–∫–∞–Ω—Å–∏—è.')
    time.sleep(1.6)
    print('–¶–∏—Ä–∫–∞—á: –∫—Ç–æ-–≤—ã?')

    option = ''
    options = {'1', '2'}

    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: \n '
              '1 - –Ω–∞–∑–≤–∞—Ç—å –∏–º—è.\n 2 - –Ω–∞–∑–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é.'.format(*options))
        option = input()

        if option == '1':
            answer = duck.name
        else:
            answer = duck.profession

        print(f'{duck.name}: —è –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞–∫–æ–π-—Ç–æ —Ç–∞–º –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, —è - {answer}')
        time.sleep(1.6)

        if answer == today_vacancy:
            print(f'–¶–∏—Ä–∫–∞—á: –∫–∞–∫–∞—è —É–¥–∞—á–∞ —á—Ç–æ –≤—ã –∑–∞—à–ª–∏ –∫ –Ω–∞–º, —É–≤–∞–∂–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä–∏—â {answer}! –í—ã—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å–µ–≥–æ–¥–Ω—è –∂–µ!')
            time.sleep(1.6)
            return you_win(duck)
        else:
            print(f'–¶–∏—Ä–∫–∞—á: –∞–∞–∞, –æ–ø—è—Ç—å {answer}! –¢–∞–∫–∏—Ö –∫–∞–∫ –≤—ã —Ç—É—Ç —Ç–æ–ª–ø—ã —Ö–æ–¥—è—Ç! \n'
                  f'–°–µ–≥–æ–¥–Ω—è –º—ã –∏—â–µ–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–¥–∫–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ - –Ω–∞–º –Ω—É–∂–µ–Ω {today_vacancy}! \n'
                  f'–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ—Ç–æ–º')
            time.sleep(1.6)
            duck.anger += 2
            return step2(duck)


if __name__ == '__main__':
    Utka_Malyar = Duck()
    step1(Utka_Malyar)
